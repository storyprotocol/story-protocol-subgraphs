// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class IPAssetCreated extends ethereum.Event {
  get params(): IPAssetCreated__Params {
    return new IPAssetCreated__Params(this);
  }
}

export class IPAssetCreated__Params {
  _event: IPAssetCreated;

  constructor(event: IPAssetCreated) {
    this._event = event;
  }

  get franchiseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ipAssetRegistry(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ipAssetId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ipAssetType(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class EventEmitter extends ethereum.SmartContract {
  static bind(address: Address): EventEmitter {
    return new EventEmitter("EventEmitter", address);
  }

  FRANCHISE_REGISTRY(): Address {
    let result = super.call(
      "FRANCHISE_REGISTRY",
      "FRANCHISE_REGISTRY():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_FRANCHISE_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "FRANCHISE_REGISTRY",
      "FRANCHISE_REGISTRY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _franchiseRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EmitIPAssetCreationCall extends ethereum.Call {
  get inputs(): EmitIPAssetCreationCall__Inputs {
    return new EmitIPAssetCreationCall__Inputs(this);
  }

  get outputs(): EmitIPAssetCreationCall__Outputs {
    return new EmitIPAssetCreationCall__Outputs(this);
  }
}

export class EmitIPAssetCreationCall__Inputs {
  _call: EmitIPAssetCreationCall;

  constructor(call: EmitIPAssetCreationCall) {
    this._call = call;
  }

  get franchiseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ipAssetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EmitIPAssetCreationCall__Outputs {
  _call: EmitIPAssetCreationCall;

  constructor(call: EmitIPAssetCreationCall) {
    this._call = call;
  }
}
