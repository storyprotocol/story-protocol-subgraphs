type IPAccountRegistered @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  implementation: Bytes! # address
  chainId: BigInt! # uint256
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type IPAccountSet @entity(immutable: true) {
  id: Bytes!
  ipId: Bytes! # address
  chainId: BigInt! # uint256
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPRegistered @entity(immutable: true) {
  id: Bytes!
  ipId: Bytes! # address
  chainId: BigInt! # uint256
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  resolver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPResolverSet @entity(immutable: true) {
  id: Bytes!
  ipId: Bytes! # address
  resolver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ModuleAdded @entity(immutable: true) {
  id: Bytes!
  name: String! # string
  module: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleRemoved @entity(immutable: true) {
  id: Bytes!
  name: String! # string
  module: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
