[
  {
    "inputs":
    [
      {
        "components":
        [
          {
            "internalType": "contract IPAssetRegistry",
            "name": "ipaRegistry",
            "type": "address"
          },
          {
            "internalType": "contract ModuleRegistry",
            "name": "moduleRegistry",
            "type": "address"
          },
          {
            "internalType": "contract LicenseRegistry",
            "name": "licenseRegistry",
            "type": "address"
          },
          {
            "internalType": "contract IPOrgController",
            "name": "ipOrgController",
            "type": "address"
          }
        ],
        "internalType": "struct BaseModule.ModuleConstruction",
        "name": "params_",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "licFrameworkRepo_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "defaultRevoker_",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs":
    [
      {
        "internalType": "uint8",
        "name": "hookType",
        "type": "uint8"
      }
    ],
    "name": "BaseModule_HooksParamsLengthMismatch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "BaseModule_OnlyModuleRegistry",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "BaseModule_ZeroIpaRegistry",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "BaseModule_ZeroLicenseRegistry",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_CallerNotIPOrgOwner",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_HooksConfigLengthMismatch",
    "type": "error"
  },
  {
    "inputs":
    [
      {
        "internalType": "uint256",
        "name": "hooksIndex",
        "type": "uint256"
      }
    ],
    "name": "HookRegistry_IndexOutOfBounds",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_MaxHooksExceeded",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_RegisteringDuplicatedHook",
    "type": "error"
  },
  {
    "inputs":
    [
      {
        "internalType": "address",
        "name": "hookAddress",
        "type": "address"
      }
    ],
    "name": "HookRegistry_RegisteringNonWhitelistedHook",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_RegisteringZeroAddressHook",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "HookRegistry_ZeroModuleRegistry",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_CallerNotIpOrgOwner",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_CallerNotLicensor",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_DerivativeNotAllowed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_DuplicateParam",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidAction",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidConfigType",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidInputValue",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidLicensorConfig",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidParamValue",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_InvalidParamsLength",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_IpOrgFrameworkAlreadySet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_IpOrgFrameworkNotSet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_ParamSetByIpOrg",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_ParentLicenseNotActive",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LicensingModule_ReciprocalCannotSetParams",
    "type": "error"
  },
  {
    "inputs":
    [
      {
        "internalType": "string",
        "name": "str",
        "type": "string"
      }
    ],
    "name": "StringTooLong",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ZeroAddress",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "enum HookRegistry.HookType",
        "name": "hType",
        "type": "uint8"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "registryKey",
        "type": "bytes32"
      }
    ],
    "name": "HooksCleared",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "enum HookRegistry.HookType",
        "name": "hType",
        "type": "uint8"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "registryKey",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "address[]",
        "name": "hooks",
        "type": "address[]"
      }
    ],
    "name": "HooksRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "address",
        "name": "ipOrg",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "frameworkId",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "url",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "enum Licensing.LicensorConfig",
        "name": "licensorConfig",
        "type": "uint8"
      },
      {
        "components":
        [
          {
            "internalType": "ShortString",
            "name": "tag",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "value",
            "type": "bytes"
          }
        ],
        "indexed": false,
        "internalType": "struct Licensing.ParamValue[]",
        "name": "values",
        "type": "tuple[]"
      }
    ],
    "name": "IpOrgLicensingFrameworkSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RequestCompleted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "reason",
        "type": "string"
      }
    ],
    "name": "RequestFailed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs":
    [
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RequestPending",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "DEFAULT_REVOKER",
    "outputs":
    [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "INDEX_NOT_FOUND",
    "outputs":
    [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "IPA_REGISTRY",
    "outputs":
    [
      {
        "internalType": "contract IPAssetRegistry",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "IP_ORG_CONTROLLER",
    "outputs":
    [
      {
        "internalType": "contract IPOrgController",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "LICENSE_REGISTRY",
    "outputs":
    [
      {
        "internalType": "contract LicenseRegistry",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "LICENSING_FRAMEWORK_REPO",
    "outputs":
    [
      {
        "internalType": "contract LicensingFrameworkRepo",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "MAX_HOOKS",
    "outputs":
    [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "MODULE_REGISTRY",
    "outputs":
    [
      {
        "internalType": "contract ModuleRegistry",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "contract IIPOrg",
        "name": "ipOrg_",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      }
    ],
    "name": "clearHooks",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "contract IIPOrg",
        "name": "ipOrg_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "caller_",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "params_",
        "type": "bytes"
      }
    ],
    "name": "configure",
    "outputs":
    [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "contract IIPOrg",
        "name": "ipOrg_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "caller_",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "moduleParams_",
        "type": "bytes"
      },
      {
        "internalType": "bytes[]",
        "name": "preHookParams_",
        "type": "bytes[]"
      },
      {
        "internalType": "bytes[]",
        "name": "postHookParams_",
        "type": "bytes[]"
      }
    ],
    "name": "execute",
    "outputs":
    [
      {
        "internalType": "bytes",
        "name": "result",
        "type": "bytes"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "address",
        "name": "ipOrg_",
        "type": "address"
      }
    ],
    "name": "getIpOrgLicensorConfig",
    "outputs":
    [
      {
        "internalType": "enum Licensing.LicensorConfig",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "address",
        "name": "ipOrg_",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "paramTag_",
        "type": "string"
      }
    ],
    "name": "getIpOrgValueForParam",
    "outputs":
    [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "bytes32",
        "name": "requestId_",
        "type": "bytes32"
      },
      {
        "internalType": "bytes",
        "name": "callbackData_",
        "type": "bytes"
      }
    ],
    "name": "handleHookCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "index_",
        "type": "uint256"
      }
    ],
    "name": "hookAt",
    "outputs":
    [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "index_",
        "type": "uint256"
      }
    ],
    "name": "hookConfigAt",
    "outputs":
    [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "hook_",
        "type": "address"
      }
    ],
    "name": "hookIndex",
    "outputs":
    [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "hook_",
        "type": "address"
      }
    ],
    "name": "isRegistered",
    "outputs":
    [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "moduleKey",
    "outputs":
    [
      {
        "internalType": "ModuleKey",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "contract IIPOrg",
        "name": "ipOrg_",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      },
      {
        "internalType": "address[]",
        "name": "hooks_",
        "type": "address[]"
      },
      {
        "internalType": "bytes[]",
        "name": "hooksConfig_",
        "type": "bytes[]"
      }
    ],
    "name": "registerHooks",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "bytes4",
        "name": "interfaceId",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs":
    [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      }
    ],
    "name": "totalHooks",
    "outputs":
    [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs":
    [
      {
        "internalType": "enum HookRegistry.HookType",
        "name": "hookType_",
        "type": "uint8"
      },
      {
        "internalType": "bytes32",
        "name": "registryKey_",
        "type": "bytes32"
      }
    ],
    "name": "totalHooksConfig",
    "outputs":
    [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]