type IPOrgRegistered @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  ipOrgId: Bytes! # address
  name: String! # string
  symbol: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPOrgTransferred @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  prevOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleAdded @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  moduleId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleConfigured @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  caller: Bytes! # address
  params: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleExecuted @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  caller: Bytes! # address
  selfParams: Bytes! # bytes
  preHookParams: [Bytes!]! # bytes[]
  postHookParams: [Bytes!]! # bytes[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleRemoved @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  moduleId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseActivated @entity(immutable: true) {
  id: Bytes!
  licenseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseNftBoundedToIpa @entity(immutable: true) {
  id: Bytes!
  licenseId: BigInt! # uint256
  ipAssetId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseRegisterred @entity(immutable: true) {
  id: Bytes!
  licenseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseRevoked @entity(immutable: true) {
  id: Bytes!
  licenseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseTransferred @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPAssetRegistered @entity(immutable: true) {
  id: Bytes!
  ipAssetId: BigInt! # uint256
  ipOrgId: Bytes! # address
  ipOrgAssetId: BigInt! # uint256
  owner: Bytes! # address
  name: String! # string
  ipAssetType: BigInt! # uint64
  hash: Bytes! # bytes32
  mediaUrl: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPAssetTransferred @entity(immutable: true) {
  id: Bytes!
  ipAssetId: BigInt! # uint256
  ipOrgId: Bytes! # address
  ipOrgAssetId: BigInt! # uint256
  prevOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetadataUpdated @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  baseURI: String! # string
  contractURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipCreated @entity(immutable: true) {
  id: Bytes!
  relationshipId: BigInt! # uint256
  relType: Bytes! # string
  srcAddress: Bytes! # address
  srcId: BigInt! # uint256
  dstAddress: Bytes! # address
  dstId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipTypeSet @entity(immutable: true) {
  id: Bytes!
  relType: Bytes! # string
  ipOrgId: Bytes! # address
  src: Bytes! # address
  srcRelatable: Int! # uint8
  srcSubtypesMask: BigInt! # uint256
  dst: Bytes! # address
  dstRelatable: Int! # uint8
  dstSubtypesMask: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipTypeUnset @entity(immutable: true) {
  id: Bytes!
  relType: Bytes! # string
  ipOrgId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}