type IPOrgRegistered @entity {
  id: Bytes!
  owner: Bytes! # address
  ipOrgId: Bytes! # address
  name: String! # string
  symbol: String! # string
  ipAssetTypes: [String!]!
  baseURI: String # string
  contractURI: String # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPOrgTransferred @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  prevOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleRegisterred @entity(immutable: true) {
  id: String!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  moduleId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleConfigured @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  caller: Bytes! # address
  params: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleExecuted @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  caller: Bytes! # address
  selfParams: Bytes! # bytes
  preHookParams: [Bytes!]! # bytes[]
  postHookParams: [Bytes!]! # bytes[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleRemoved @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  moduleKey: String! # string
  moduleId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type HookRegistered @entity(immutable: true) {
  id: Bytes! # address
  moduleId: Bytes! # address
  registryKey: Bytes!
  type: Int! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LicenseRegisterred @entity(immutable: true) {
  id: Bytes!
  licenseId: BigInt! # uint256
  status: Int! # uint8 enum;
  isReciprocal: Boolean! 
  derivativeNeedsApproval: Boolean!
  revoker: Bytes! # address
  licensor: Bytes! # address
  ipOrgId: Bytes! # address
  ipAssetId : BigInt # uint256
  parentLicenseId : BigInt # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPOrgLicenseParam @entity(immutable: true) {
  id: Bytes! # ipOrg address
  frameworkId: String!
  url: String!
	licensorConfig: Int! # uint8 enum
  paramTags: [String!]!
  paramValues: [Bytes!]!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPAssetRegistered @entity(immutable: true) {
  id: Bytes!
  ipAssetId: BigInt! # uint256
  ipOrgId: Bytes! # address
  ipOrgAssetId: BigInt! # uint256
  owner: Bytes! # address
  name: String! # string
  ipAssetTypeIndex: Int! # uint8
  ipAssetTypeValue: String! # string
  contentHash: Bytes! # bytes32
  mediaUrl: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IPAssetTransferred @entity(immutable: true) {
  id: Bytes!
  ipAssetId: BigInt! # uint256
  ipOrgId: Bytes! # address
  ipOrgAssetId: BigInt! # uint256
  prevOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetadataUpdated @entity(immutable: true) {
  id: Bytes!
  ipOrgId: Bytes! # address
  baseURI: String! # string
  contractURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipCreated @entity(immutable: true) {
  id: Bytes!
  relationshipId: BigInt! # uint256
  relType: String! # string
  srcAddress: Bytes! # address
  srcId: BigInt! # uint256
  dstAddress: Bytes! # address
  dstId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipTypeSet @entity(immutable: true) {
  id: Bytes!
  relType: String! # string
  ipOrgId: Bytes! # address
  src: Bytes! # address
  srcRelatable: Int! # uint8
  srcSubtypesMask: BigInt! # uint256
  dst: Bytes! # address
  dstRelatable: Int! # uint8
  dstSubtypesMask: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelationshipTypeUnset @entity(immutable: true) {
  id: Bytes!
  relType: String! # string
  ipOrgId: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transaction @entity(immutable: true) {
  id: Bytes! 
  initiator: Bytes! # address
  ipOrgId: Bytes # address
  resourceType: ResourceType!
  resourceId: String!
  actionType: ActionType!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

enum ResourceType {
  Unspecified
  IPOrg
	IPAsset
	License
	Relationship
	RelationshipType
	Module
	Hook
	Dispute
}

enum ActionType {
  Unspecified
	Register
	Unregister
	Configure
}